name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version'
        required: true
        type: string
      pre_release:
        description: 'This is a pre-release'
        required: true
        type: boolean
        default: false

env:
  NAME: MinecraftModpackDownloader-${{ github.event.inputs.version }}

jobs:
  windowsbuild:
    runs-on: windows-latest
    name: Build Package for Windows

    steps:
      - name: Check Out
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Make
        run: pyinstaller -F main.py --clean

      - name: Upload to Github Actions Artifact
        uses: actions/upload-artifact@v2
        with:
          name: MCMPD-win
          path: dist\
  
  linuxbuild:
    runs-on: ubuntu-latest
    name: Build Package for Linux

    steps:
      - name: Check Out
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
           python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Make
        run: python -m PyInstaller -F main.py --clean
        
      - name: Upload to Github Actions Artifact
        uses: actions/upload-artifact@v2
        with:
          name: MCMPD-linux
          path: ./dist/

  publish: 
    runs-on: ubuntu-latest
    name: publish
    needs: [windowsbuild, linuxbuild]
    steps:
      - name: Check Out
        uses: actions/checkout@v3
      - name: Download Windows Build
        uses: actions/download-artifact@v2
        with:
          name: MCMPD-win
          path: dist/
      - name: Download Linux Build
        uses: actions/download-artifact@v2
        with:
          name: MCMPD-linux
          path: dist/
      
      - name: Compress Packages
        run: cd ./dist && tar zcvf linux.tar.gz main && zip -r windows.zip main.exe
      
      - name: DEBUG
        run: ls ./dist
     
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ env.NAME }}
          draft: false
          prerelease: ${{ github.event.inputs.pre_release }}

      - name: Upload Linux Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/linux.tar.gz
          asset_name: ${{ env.NAME }}-LINUX.tar.gz
          #忘加后缀名系列 现已开播
          asset_content_type: application/x-gtar
      
      - name: DEBUG2
        run: ls ./dist
      
      - name: Upload Windows Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist\windows.zip
          #我恨斜杠 又得放工
          asset_name: ${{ env.NAME }}.zip
          asset_content_type: application/zip
